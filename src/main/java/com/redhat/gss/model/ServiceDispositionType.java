//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.23 at 12:57:50 PM PST 
//


package com.redhat.gss.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for serviceDispositionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="serviceDispositionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="none"/>
 *     &lt;enumeration value="import"/>
 *     &lt;enumeration value="export"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "serviceDispositionType")
@XmlEnum
public enum ServiceDispositionType {


    /**
     * 
     *                         Do not import or export services from this dependency.
     *                     
     * 
     */
    @XmlEnumValue("none")
    NONE("none"),

    /**
     * 
     *                         Import, but do not re-export, services from this dependency.
     *                     
     * 
     */
    @XmlEnumValue("import")
    IMPORT("import"),

    /**
     * 
     *                         Import and re-export services found in this dependency.
     *                     
     * 
     */
    @XmlEnumValue("export")
    EXPORT("export");
    private final String value;

    ServiceDispositionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ServiceDispositionType fromValue(String v) {
        for (ServiceDispositionType c: ServiceDispositionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
